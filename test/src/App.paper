<template>

    <h1>
        一、mathFormula
    </h1>

    <h2>BUG修复</h2>
    <div>
        <span kp-math-formula="mathFormulas_bug[0]"></span>
        <span kp-math-formula="mathFormulas_bug[1]"></span>
        <span kp-math-formula="mathFormulas_bug[2]"></span>
        <span kp-math-formula="mathFormulas_bug[3]"></span>
    </div>

    <h2>开发测试</h2>
    <div>

        <i>
            基本的：
        </i>

        <span kp-math-formula="mathFormulas.gen"></span>
        <span kp-math-formula="mathFormulas.limt"></span>
        <span kp-math-formula="mathFormulas.sum"></span>
        <span kp-math-formula="mathFormulas['matrix-hls']"></span>
        <span kp-math-formula="mathFormulas.matrix"></span>
        <span kp-math-formula="mathFormulas.matrix2"></span>
        <span kp-math-formula="mathFormulas.division"></span>
        <span kp-math-formula="mathFormulas.equationSet"></span>
        <span kp-math-formula="mathFormulas.upLine"></span>
        <span kp-math-formula="mathFormulas.downLine"></span>
        <span kp-math-formula="mathFormulas.absoluteValue"></span>
        <span kp-math-formula="mathFormulas.integral1"></span>
        <span kp-math-formula="mathFormulas.integral2"></span>
        <span kp-math-formula="mathFormulas.listedOr"></span>
        <span kp-math-formula="mathFormulas.listedAnd"></span>

        <i>
            简单组合：
        </i>

        <span kp-math-formula="mathFormulas.gen_limt"></span>
        <span kp-math-formula="mathFormulas.gen_sum"></span>
        <span kp-math-formula="mathFormulas.gen_matrix"></span>
        <span kp-math-formula="mathFormulas.upLine1"></span>
        <span kp-math-formula="mathFormulas.downLine1"></span>
        <span kp-math-formula="mathFormulas.absoluteValue1"></span>
        <span kp-math-formula="mathFormulas.integral3"></span>
        <span kp-math-formula="mathFormulas.integral4"></span>

        <i>
            拼接组合：
        </i>

        <span kp-math-formula="mathFormulas.array"></span>
        <span kp-math-formula="mathFormulas['bracket-small']"></span>
        <span kp-math-formula="mathFormulas['bracket-middle']"></span>
        <span kp-math-formula="mathFormulas['bracket-big']"></span>
        <span kp-math-formula="mathFormulas.integral5"></span>

        <i>
            特殊位置：
        </i>

        <span kp-math-formula="mathFormulas.rightTop"></span>
        <span kp-math-formula="mathFormulas.rightBottom"></span>
        <span kp-math-formula="mathFormulas.rightTop2"></span>
        <span kp-math-formula="mathFormulas.rightBottom2"></span>

    </div>

</template>
<script>

    export default {
        data() {
            return {
                mathFormulas: {},
                mathFormulas_bug: []
            };
        },
        mounted() {
            this.mathFormulas = {

                // 基本的
                gen: this.$mathFormula.gen("(x+1)*y"),
                limt: this.$mathFormula.limt("x->10", "(10x+1)*z"),// x趋向10的时候x+1值
                sum: this.$mathFormula.sum("i=0", '90', '(x+1)'),
                "matrix-hls": this.$mathFormula.matrix([
                    [1, 0, 0, 0],
                    [0, 1, 0, 0],
                    [0, 0, 1, 123],
                    [980, 0, 0, 1]], true),// 行列式
                matrix: this.$mathFormula.matrix([
                    ["A", "", ""],
                    ["", "...", ""],
                    ["", "", "B"]
                ], false),// 矩阵
                division: this.$mathFormula.division(1, 100),
                equationSet: this.$mathFormula.equationSet(
                    "1x+10y=19",
                    this.$mathFormula.join(this.$mathFormula.sum("i=0", '90', '(x+1)'), "+10=0")
                ),
                "matrix2": this.$mathFormula.matrix([
                    [1, 0, 0, '|', 0],
                    [0, 1, 0, '|', 0],
                    [0, 0, 1, '|', 123],
                    [980, 0, 0, '|', 1]]),
                upLine: this.$mathFormula.upLine('a'),
                downLine: this.$mathFormula.downLine('a'),
                absoluteValue: this.$mathFormula.absoluteValue('10+x'),
                integral1: this.$mathFormula.integral('x+1', "dx", 9, 100),
                integral2: this.$mathFormula.integral('x+1', "dx"),
                listedOr: this.$mathFormula.listedOr('i=1', '∞'),
                listedAnd: this.$mathFormula.listedAnd('i=1', '∞'),

                // 简单组合
                gen_limt: this.$mathFormula.limt("x->10", this.$mathFormula.gen("(x+1)*y")),
                gen_sum: this.$mathFormula.sum("n=0", "100", this.$mathFormula.gen(this.$mathFormula.sum("i=0", '90', '(x+1)'))),
                gen_matrix: this.$mathFormula.matrix([
                    [1, this.$mathFormula.gen("(x+1)*y")],
                    [0, 1]
                ]),
                upLine1: this.$mathFormula.upLine(this.$mathFormula.matrix([
                    [1, this.$mathFormula.gen("(x+1)*y")],
                    [0, 1]
                ])),
                downLine1: this.$mathFormula.gen(this.$mathFormula.join(this.$mathFormula.upLine(this.$mathFormula.matrix([
                    [1, this.$mathFormula.gen("(x+1)*y")],
                    [0, 1]
                ])), "+", this.$mathFormula.downLine('a'))),
                absoluteValue1: this.$mathFormula.join('x+', this.$mathFormula.absoluteValue(this.$mathFormula.limt("x->10", this.$mathFormula.gen("(x+1)*y"))), '=', 90),
                integral3: this.$mathFormula.integral(this.$mathFormula.limt("x->10", this.$mathFormula.gen("(x+1)*y")), "dx", 9, 100),
                integral4: this.$mathFormula.integral(this.$mathFormula.matrix([
                    [1, this.$mathFormula.gen("(x+1)*y")],
                    [0, 1]
                ]), "dx"),

                // 拼接组合
                array: this.$mathFormula.join('x', "+", this.$mathFormula.limt("x->10", this.$mathFormula.gen("(x+1)*y"))),
                "bracket-small": this.$mathFormula.bracket(this.$mathFormula.join(
                    this.$mathFormula.bracket("x+1", 'small'),
                    "+",
                    this.$mathFormula.matrix([
                        [1, this.$mathFormula.gen("(x+1)*y")],
                        [0, 1]
                    ])
                ), 'small'),
                "bracket-middle": this.$mathFormula.bracket(2, 'middle'),
                "bracket-big": this.$mathFormula.bracket(this.$mathFormula.join(this.$mathFormula.matrix([
                    [1, this.$mathFormula.gen("(x+1)*y")],
                    [0, 1]
                ]), "+10"), 'big'),
                integral5: this.$mathFormula.integral(this.$mathFormula.limt("x->10", "(10x+1)*z"), this.$mathFormula.join("d", this.$mathFormula.bracket(this.$mathFormula.gen("(x+1)*y"), 'small')), 0, 100),

                // 特殊位置
                rightTop: this.$mathFormula.rightTop("X", 2),
                rightBottom: this.$mathFormula.rightBottom("A", "x"),
                rightTop2: this.$mathFormula.rightTop(this.$mathFormula.matrix([
                    [1, this.$mathFormula.gen("(x+1)*y")],
                    [0, 1]
                ]), this.$mathFormula.limt("x->10", "(10x+1)*z")),
                rightBottom2: this.$mathFormula.rightBottom(this.$mathFormula.matrix([
                    [1, this.$mathFormula.gen("(x+1)*y")],
                    [0, 1]
                ]), this.$mathFormula.limt("x->10", "(10x+1)*z"))
            };

            this.mathFormulas_bug = [
                this.$mathFormula.join(
                    this.$mathFormula.limt(
                        "x→∞",
                        this.$mathFormula.rightTop(
                            this.$mathFormula.join(
                                '(1+',
                                this.$mathFormula.division('1', 'x'),
                                ')'
                            ),
                            'x'))
                    , '=e'),
                this.$mathFormula.limt(this.$mathFormula.join("x→", this.$mathFormula.rightBottom('x', '0')), 'f(x)'),
                this.$mathFormula.join("x→", this.$mathFormula.rightBottom('x', '0')),
                this.$mathFormula.integral(
                    this.$mathFormula.division(
                        '1',
                        this.$mathFormula.gen(
                            this.$mathFormula.join(
                                '1-',
                                this.$mathFormula.rightTop('x', '2')
                            )
                        )
                    ),
                    'dx'
                )
            ];
        }
    };
</script>
<style lang="scss">
    [quickpaper] {
        padding: 30px;

        &>h2 {
            padding: 20px 0;
        }
    }
</style>
